!function(n){var a={};function e(t){if(a[t])return a[t].exports;var r=a[t]={i:t,l:!1,exports:{}};return n[t].call(r.exports,r,r.exports,e),r.l=!0,r.exports}e.m=n,e.c=a,e.d=function(n,a,t){e.o(n,a)||Object.defineProperty(n,a,{enumerable:!0,get:t})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,a){if(1&a&&(n=e(n)),8&a)return n;if(4&a&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(e.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&a&&"string"!=typeof n)for(var r in n)e.d(t,r,function(a){return n[a]}.bind(null,r));return t},e.n=function(n){var a=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(a,"a",a),a},e.o=function(n,a){return Object.prototype.hasOwnProperty.call(n,a)},e.p="",e(e.s=0)}([function(n,a,e){"use strict";e.r(a);var t=()=>'\n  <div class="header-main">\n    <div class="header-logo">\n    <a href="/rockrty/">\n    <img src="https://i.imgur.com/Pr8pXcJ.png" width="200" alt="rick and mortys logo">\n    </a>\n    </div>\n    <div class="header-nav">\n    <a href="#/about/">about</a>\n    </div>\n  </div>\n  ';const r="https://rickandmortyapi.com/api/character/";var s=async n=>{const a=n?`${r}${n}`:r;try{const n=await fetch(a);return await n.json()}catch(n){console.log("fetch Error",n)}};var i=()=>location.hash.slice(1).toLocaleLowerCase().split("/")[1]||"/";var c=()=>'\n  <div class="Error404">\n    <h2>Error 404</h2>\n  </div>\n  ';var o=n=>{if(n.length<=3){return"/"===n?n:"/:id"}return n};const l={"/":async()=>`\n  <div class="characters">\n  ${(await s()).results.map(n=>`\n    <article class="character-item">\n      <a href="#/${n.id}">\n        <div class="image-container">\n          <img src="${n.image}" alt="${n.name}" class="character-image">\n        </div>\n        <div class="character-content">\n          <div class="character-title">\n            <h2>${n.name}</h2>\n            <div class="status-container">\n            <div class="dot ${n.status}"></div>\n            <span class="bold-info">${n.status} - ${n.species}</span>\n            </div>\n          </div>\n          <div class="character-info">\n          <span class="question bold-info">Origin:</span><span>${n.origin.name}</span>\n          </div>\n          <div class="character-info">\n          <span class="question bold-info">Last known location:</span><span>${n.location.name}</span>\n          </div>\n        </div>\n      </a>\n    </article>\n    `).join("")}\n  </div>\n  `,"/:id":async()=>{const n=i(),a=await s(n);return`\n  <div class="characters-inner">\n    <article class="characters-card">\n      <img src="${a.image}" alt="${a.name}">\n      <h2>${a.name}</h2>\n    </article>\n    <article class="characters-card">\n      <h3>Episodios:<span>${a.episode.length}</span></h3>\n      <h3>Status:<span>${a.status}</span></h3>\n      <h3>Species:<span>${a.species}</span></h3>\n      <h3>Gender:<span>${a.gender}</span></h3>\n      <h3>Origin:<span>${a.origin.name}</span></h3>\n      <h3>Last location:<span>${a.location.name}</span></h3>\n    </article>\n  </div>\n  `},"/contact":"Contact"};var d=async()=>{const n=document.getElementById("header"),a=document.getElementById("content");n.innerHTML=await t();let e=i(),r=await o(e),s=l[r]?l[r]:c;a.innerHTML=await s()};window.addEventListener("load",d),window.addEventListener("hashchange",d)}]);